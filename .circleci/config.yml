version: 2.1

workflows:
  version: 2
  default:
    jobs:
      - reflection
          filters:
            tags:
              only: /.*/

      - openjdk-8
          filters:
            tags:
              only: /.*/

      - openjdk-11
          filters:
            tags:
              only: /.*/

      - deploy:
          requires:
            - build
          filters:
            tags:
              only: /Release-.*/
          context:
            - CLOJARS_DEPLOY

commands:
  setup-project:
    description: "Setup project"
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}

      - run:
          name: Fetch dependencies
          command: |
            lein depsall

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}

  run-tests:
    description: "Run tests"
    steps:
      - run:
          name: Run JVM tests with clojure 1.6
          command: |
            lein with-profile +1.6 test
      - run:
          name: Run JVM tests with clojure 1.7
          command: |
            lein with-profile +1.7 test
      - run:
          name: Run JVM tests with clojure 1.8
          command: |
            lein with-profile +1.8 test
      - run:
          name: Run JVM tests with clojure 1.9
          command: |
            lein with-profile +1.9 test
      - run:
          name: Run JVM tests with clojure 1.10.0
          command: |
            lein with-profile +1.10.0 test
      - run:
          name: Run JVM tests with clojure 1.10.1
          command: |
            lein with-profile +1.10.1 test

  run-reflection:
    description: "Ensure no reflection warnings"
    steps:
      - run: "! lein check 2>&1 | grep 'Reflection warning'"

jobs:
  reflection:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1-node
    working_directory: ~/repo

    steps:
      - setup-project
      - run-reflection

  openjdk-8:
    docker:
      - image: circleci/clojure:openjdk-8-lein-2.9.1-node
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - setup-project
      - run-tests

  openjdk-11:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.1-node
    working_directory: ~/repo

    environment:
      JVM_OPTS: -Xmx3200m

    steps:
      - setup-project
      - run-tests

  deploy:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:openjdk-8-lein-2.9.1
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      LEIN_ROOT: "true"
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "project.clj" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
         name: Install babashka
         command: |
           curl -s https://raw.githubusercontent.com/borkdude/babashka/master/install -o install.sh
           sudo bash install.sh
           rm install.sh
      - run:
          name: Install deployment-script
          command: |
            curl -s https://raw.githubusercontent.com/clj-commons/infra/main/deployment/circle-maybe-deploy.bb -o circle-maybe-deploy.bb
            chmod a+x circle-maybe-deploy.bb

      - run: lein deps

      - run:
          name: Setup GPG signing key
          command: |
            GNUPGHOME="$HOME/.gnupg"
            export GNUPGHOME
            mkdir -p "$GNUPGHOME"
            chmod 0700 "$GNUPGHOME"

              echo "$GPG_KEY" \
               | base64 --decode --ignore-garbage \
               | gpg --batch --allow-secret-key-import --import

               gpg --keyid-format LONG --list-secret-keys

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "project.clj" }}
      - run:
         name: Deploy
         command: |
           GPG_TTY=$(tty)
           export GPG_TTY
           echo $GPG_TTY
           ./circle-maybe-deploy.bb lein deploy clojars
